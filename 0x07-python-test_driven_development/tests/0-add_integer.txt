Importing the function:
    >>> add_integer = __import__("0-add_integer").add_integer

Basic addition:
     >>> add_integer(1, 3)
     4

Float Inputs:
     >>> add_integer(2.5, 1.5)
     4

Negative Integers:
     >>> add_integer(2, -5)
     -3
Large Integers:
     >>> add_integer(1000, 500)
     1500

Defualt for b:
    >>> add_integer(2)
    100

Zero as one of the Inputs:
     >>> add_integer(0, 3)
     3

Both Inputs as Zero:
    >>> add_integer(0, 0)
    0

TypeError for Non-Integer Inputs:
     >>> add_integer("xyz", 3)
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer

     >>> add_integer(3, "xyz")
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer

     >>> add_integer("")
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer

TypeError for Float Inputs:
     >>> add_integer(3.2, "xyz")
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer
     
No argument Passesd
    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

